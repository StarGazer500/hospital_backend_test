name: Hospital Backend Api Test
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests

        env:
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          API_KEY: ${{ secrets.API_KEY }}
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
          MONGO_INITDB_HOSPITAL_PASSWORD: ${{ secrets.MONGO_INITDB_HOSPITAL_PASSWORD }}
          MONGO_INITDB_HOSPITAL_USER: ${{ secrets.MONGO_INITDB_HOSPITAL_USER}}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET}}
          
        run: |
          npm run test1
          npm run test2
          npm run test3

      - name: Configure DNS
        run: |
          echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf > /dev/null
          echo "nameserver 8.8.4.4" | sudo tee -a /etc/resolv.conf > /dev/null

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          driver-opts: |
            image=moby/buildkit:latest

      - name: Set up Docker Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: v2.20.3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Enable BuildKit
        run: |
          echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Docker Compose Build
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
        run: |
          docker compose up -d \
            --build-arg BUILD_VERSION=${{ steps.meta.outputs.version }} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${{ github.sha }}

      - name: Cleanup
        if: always()
        run: |
          docker compose down -v
          docker system prune -f